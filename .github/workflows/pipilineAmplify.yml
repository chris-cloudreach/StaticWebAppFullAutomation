name: Team 3 static website challenge
on: [ push ] 
jobs:
  terraform_deployment_of_APIGW_COGNITO_DDB_LAMBDA:
    runs-on: ubuntu-latest
    steps: # The list of steps to take for executionnn
      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Clone your code in the pipeline
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1

      - name: read config.js file 
        id: readConfig 
        run: |
          echo "echo the working directory below"
          pwd
          echo "Reading the config file now below"
          cat ./js/config.js
                         
        continue-on-error: true
        
      - name: Init
        id: init
        run: terraform init

      - name: Plan
        id: plan
        run: terraform plan 
        continue-on-error: true

      - name: Apply
        id: apply
        run: terraform apply --auto-approve
        continue-on-error: true

      - name: Manipulating userpoolid 
        id: userpolID
        run: |
          terraform output > ~/userPoolId.txt
          echo "printing out the text file"
          cat ~/userPoolId.txt
          sed -n '4p' ~/userPoolId.txt > ~/userPoolId2.txt
          sed -n '3p' ~/userPoolId.txt > ~/appclient.txt
          sed -n '2p' ~/userPoolId.txt > ~/apigwurl.txt
          echo "printing out only userpool"
          cat ~/userPoolId2.txt
          cat ~/appclient.txt
          cat ~/apigwurl.txt

          echo "PREP CONFIG FILE"
          uid=$(cat ~/userPoolId2.txt)
          sed -i -e "s/xyz/$uid/" ./js/config.js

          aid=$(cat ~/appclient.txt)
          sed -i -e "s/xxx/$aid/" ./js/config.js

          i_url=$(cat ~/apigwurl.txt)
          sed -i -e "s|zzz|$i_url|" ./js/config.js
          
          echo "printing modified config js"
          cat ./js/config.js
        continue-on-error: true

      - name: Commit files # transfer the new html files back into the repository
        run: |
          git config --global user.name "chris-cloudreach"
          git config --global user.email "christopher.ogbunuzor@cloudreach.com"
          git add ./js/config.js
          git commit -m "Updating config js file"
          git push

        continue-on-error: true



  terraform_deployment_of_AMPLIFY:
    needs: terraform_deployment_of_APIGW_COGNITO_DDB_LAMBDA
    runs-on: ubuntu-latest
    steps: # The list of steps to take for executionnn
      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Clone your code in the pipeline
        uses: actions/checkout@v2

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1

      - name: Init
        id: init
        run: terraform init

      - name: Modify amplify.tf file 
        id: modAmp
        run: |
          sed -i -e "s/HGGHHJGHGHGH/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/" ./amplify.tf
          echo "printing modified amplify file"
          cat ./amplify.tf
        continue-on-error: true

      # - name: Modify amplify.tf file 
      #   id: modAmp
      #   run: |
      #     echo "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" > ~/PAT.txt
      #     echo "Modifying amplify file"
      #     uidD=$(cat ~/PAT.txt)
      #     sed -i -e "s/HGGHHJGHGHGH/$uidD/" ./amplify.tf
      #     echo "printing modified amplify file"
      #     cat ./amplify.tf
      #   continue-on-error: true

      # - name: Create amplify file
      #   id: create
      #   run: |
      #     terraform plan 
      #   continue-on-error: true
      - name: Plan
        id: plan
        run: terraform plan 
        continue-on-error: true

      - name: Apply
        id: apply
        run: terraform apply --auto-approve
        continue-on-error: true




       



  

   


     

 



     